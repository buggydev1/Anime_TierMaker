{"version":3,"sources":["Components/TierContainer/TierContainer.js","Components/TileHolders/TileHolder.js","Components/SearchResults/SearchResults.js","Components/SearchAnime/SearchAnime.js","Components/SearchResults/SearchHeader.js","Components/Other/Other.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","id","className","droppableId","provided","droppableProps","ref","innerRef","placeholder","TileHolder","tile","dropId","getname","image","undefined","anime","manga","name","map","index","draggableId","draggableProps","dragHandleProps","src","image_url","alt","mal_id","SearchResults","results","onClick","type","SearchAnime","handleSubmit","handleChange","searchString","onSubmit","required","onChange","value","SearchHeader","lastSearch","Other","props","useState","images","setImages","searchOptions","tileData","getTileData","setSearchString","setLastSearch","page","event","target","preventDefault","url","fetch","then","response","json","catch","console","error","getImages","onDragEnd","result","destination","items","Array","from","splice","source","reorderedItem","log","Home","routes","Component","key","path","App","route","to","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99aec1ff.chunk.js","sourcesContent":["import {Droppable } from 'react-beautiful-dnd';\n\nexport default function Layout ( {id} ) {\nreturn(\n    <div>\n        \n        <div className='tier-container'>\n            <div className='tier-row'>\n                <div className='labal'>\n                    <span>lable</span>\n                </div>\n                <Droppable droppableId={id}>\n                    {(provided) => (\n                    <div className='tier-sort'{...provided.droppableProps} ref={provided.innerRef}>\n                          ...\n                        {provided.placeholder}\n                    </div>\n                    )}\n                </Droppable>\n                <div className='setting'>\n                    <span>Put Settings here</span>\n                </div>\n                <div className='move-buttons'>\n                    <span>adjust TBA</span>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n)\n}","\nimport {Draggable, Droppable } from 'react-beautiful-dnd';\nexport default function TileHolder ({tile, dropId}){\n    const getname = (image) => {\n       if (image.anime[0] === undefined) {\n           return image.manga[0].name\n       } else{\n           return image.anime[0].name\n       }\n    }\n    \n    return (\n        <Droppable droppableId={dropId}>\n              {(provided) =>(\n        <div className='tile-holder' {...provided.droppableProps} ref={provided.innerRef}>\n             ...\n            {provided.placeholder}\n            {tile.map((image, index)=>{\n                return  <Draggable key={image.mal_id} draggableId={image.name} index={index}>\n                            {(provided) => (\n                            <div className=\"tile-render\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\n                                <span>Name: {image.name} \n                                <br/>Anime: {getname(image)} \n                                </span>\n                                <img className='tile' src={image.image_url} alt={image.name} />\n                            </div>)}\n                        </Draggable>\n            })}\n           \n        </div> )}\n            </Droppable>\n \n    )\n}","const SearchResults = ({ results, tile }) => {\n    // return early if there are no images\n   \n    if (results === null) {        \n        return <h2>No Images Found!</h2>\n      }\n    \n      \n    return (\n      <div className=\"gallery\">\n          \n        {results.map(image => (\n            <div onClick={() => tile(image)} key={image.mal_id} className=\"gif\">\n                \n                <input type='image' className='results' src={image.image_url} alt={image.name} />\n               \n            </div>\n        ))}\n      </div>\n    )\n  }\n\n  export default SearchResults;","export default function SearchAnime ({ handleSubmit, handleChange, searchString }) {\n  return(\n    <div className='search'>\n     \n            <form onSubmit={handleSubmit} className='box'>\n            <input\n          placeholder=\"Search\"\n          type=\"text\"\n          name=\"searchString\"\n          required\n          onChange={handleChange}\n          value={searchString}\n        />\n        <button  type=\"submit\">\n            Submit\n        </button>\n            </form>\n        \n    </div>)\n}","import React from 'react';\n\nfunction SearchHeader({ lastSearch }) {\n  return (\n    <header>\n      <div className=\"brand\">\n  \n  <h1>Anime Searcher</h1>\n</div>\n      <p className=\"muted\">\n        Showing results for <strong>{lastSearch}</strong>\n      </p>\n    </header>\n  );\n}\nexport default SearchHeader;","import Layout from '../TierContainer/TierContainer'\nimport TileHolder from '../TileHolders/TileHolder'\nimport SearchResults from \"../SearchResults/SearchResults\"\nimport SearchAnime from \"../SearchAnime/SearchAnime\";\nimport React, { useState } from 'react';\nimport SearchHeader from \"../SearchResults/SearchHeader\"\nimport { DragDropContext} from 'react-beautiful-dnd';\n\n\nfunction Other(props) {\n  const [images, setImages] = useState(null)\n  const searchOptions = {\n    api: 'https://api.jikan.moe/v3',\n    endpoint: '/search',\n    type: '/character'\n  };\n  const [ tileData, getTileData] = useState([]); \n  const [searchString, setSearchString] = useState('');\n  const [lastSearch, setLastSearch] =useState('')\n \n\nfunction tileMaker (tile) {\n  getTileData([...tileData, tile])\n}\n\n  function getImages(searchString) {\n   \n    /* Build a URL from the searchOptions object */\n    const url = `${searchOptions.api}${searchOptions.endpoint}${searchOptions.type}?q=${searchString}`;\n  \n    fetch(url)\n      .then(response => response.json())\n      .then(response => {\n        \n        setImages(response.results);\n        setLastSearch(searchString);\n        setSearchString('')\n        \n       \n      \n      })\n      .catch(console.error);\n  }\n\n  function handleChange(event) {\n    setSearchString(event.target.value);\n    \n  }\n  \n  function handleSubmit(event) {\n   \n    event.preventDefault();\n    getImages(searchString);\n  }\n\n\n\n  \n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(tileData);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    getTileData(items);\n    console.log(result)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>{props.page}</h1>\n      <header>Tier list title</header>\n      <div className=\"tier-layout\">\n        <div className='anime-search'>\n          <SearchHeader lastSearch={lastSearch} />\n          <SearchAnime\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          searchString={searchString}\n          />\n          <SearchResults results={images} tile={tileMaker}/>\n        </div>\n        <div className=\"tier-maker\">\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n           \n                \n            <Layout id=\"tier1\"></Layout>\n            <Layout id={\"tier2\"}></Layout>\n            <Layout id={\"tier3\"}></Layout> \n            \n              \n              <TileHolder tile={tileData} dropId={\"holder\"} >\n              \n              </TileHolder>\n            \n          </DragDropContext>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Other;\n","import SearchResults from \"../SearchResults/SearchResults\"\nimport SearchAnime from \"../SearchAnime/SearchAnime\";\nimport React, { useState,  } from 'react';\nimport SearchHeader from \"../SearchResults/SearchHeader\"\nimport '../../styles/style.css'\nfunction Home() {\n  const [images, setImages] = useState(null)\n  const searchOptions = {\n    \n    limit: 25,\n    rating: 'G',\n    api: 'https://api.jikan.moe/v3',\n    endpoint: '/search',\n    type: '/character'\n  };\n\n\n\n  const [searchString, setSearchString] = useState('');\n  const [lastSearch, setLastSearch] =useState('')\n   \n  \n  function getImages(searchString) {\n   \n    /* Build a URL from the searchOptions object */\n    const url = `${searchOptions.api}${searchOptions.endpoint}${searchOptions.type}?q=${searchString}`;\n  \n    fetch(url)\n      .then(response => response.json())\n      .then(response => {\n        setImages(response.results);\n        setLastSearch(searchString);\n        setSearchString('')\n       \n      })\n      .catch(console.error);\n  }\n\n  function handleChange(event) {\n    setSearchString(event.target.value);\n    \n  }\n  \n  function handleSubmit(event) {\n   \n    event.preventDefault();\n    getImages(searchString);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Hello Home</h1>\n      <SearchHeader lastSearch={lastSearch} />\n      <SearchAnime\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      searchString={searchString}\n      />\n      <SearchResults results={images} />\n    </div>\n  );\n}\n\nexport default Home;\n","import './App.css';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport Other from './Components/Other/Other'\nimport Home from './Components/Home/Home'\nimport './styles/style.css'\n\n\n// Save the Component, key and path in an array of objects for each Route\n// You could write all routes by hand but I'm lazy annd this lets me use\n// the map method to just loop over them and make my routes\n// SWITCH is used so that it only ever matches one route at a time\n// If you don't want to use react router just rewrite the app component to not use it\n\nconst routes = [\n  {\n    Component: Other,\n    key: 'Other',\n    path: '/other'\n  },\n  {\n    Component: Other,\n    key: 'Another',\n    path: '/another'\n  },\n  {\n    Component: Home,\n    key: 'Home',\n    path: '/'\n  }\n]\n\nexport default function App () {\n\n  return (\n    <Router>\n      <nav>\n        {routes.map(route => <Link key={route.key} to={route.path}>{route.key}</Link>)}\n      </nav>\n      <Switch>\n        {\n          routes.map(({key, Component, path}) => (\n            <Route\n              key={key}\n              path={path}\n              component={props => <Component {...props} page={key} />}\n              />))\n        }\n      </Switch>\n    </Router>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}